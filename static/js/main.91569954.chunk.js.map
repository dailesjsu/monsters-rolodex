{"version":3,"sources":["components/card/card.components.jsx","logo.svg","components/card-list/card-list.component.jsx","components/search-box.component/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0UAGaA,GCHE,I,ODGK,SAACC,GAAD,OAEpB,sBAAKC,UAAW,iBAAhB,UACI,qBAAKC,IAAK,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACvB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAKN,EAAMI,QAAQG,aEJVC,G,OAAW,SAAAR,GAAK,OACxB,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAC5B,cAAC,EAAD,CAAwBA,QAAUA,GAAtBA,EAAQC,WCJfM,G,qBAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACrB,uBACIZ,UAAW,SACXa,KAAO,SACPF,YAAaA,EACbG,SAAUF,MCmCHG,E,kDAlCb,aACC,IAAD,8BACE,gBAYFH,aAAc,SAACI,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAXrC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALjB,E,gEAQqB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,S,+BAKlC,IAAD,EAC4BC,KAAKN,MAA/Bb,EADF,EACEA,SAAUU,EADZ,EACYA,YACZU,EAAmBpB,EAASqB,QAAO,SAAArB,GAAQ,OAC/CA,EAASH,KAAKyB,cAAcC,SAASb,EAAYc,wBAEnD,OACE,sBAAKhC,UAAU,MAAf,UACI,yCACA,cAAC,EAAD,CACAW,YAAa,iBACbC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAWoB,EAArB,sB,GA/BUK,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.91569954.chunk.js","sourcesContent":["import React from 'react';\nimport './card.style.css';\n\nexport const Card = (props) =>(\n\n<div className ='card-container'>\n    <img alt =\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\n    <h2>{props.monster.name}</h2>\n    <p>{ props.monster.email}</p>\n</div>\n)","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport {Card} from '../card/card.components';\nimport './card-list.style.css';\n\nexport const CardList = props => (\n     <div className='card-list'>\n         {props.monsters.map(monster => (\n        <Card key ={monster.id} monster ={monster}/>))}\n        </div>\n);","import React from 'react';\nimport './search-box.style.css';\n\nexport const SearchBox = ({placeholder,handleChange}) => (\n    <input \n        className ='search'\n        type = 'search' \n        placeholder={placeholder}\n        onChange={handleChange}\n                />\n)","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { CardList } from './components/card-list/card-list.component';\nimport './App.css';\nimport { render } from '@testing-library/react';\nimport {SearchBox} from './components/search-box.component/search-box.component';\n\nclass App extends Component \n{\n  constructor()\n  {\n    super();\n    \n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ monsters: users}));\n  }\n  handleChange =(e) => {\n    this.setState({searchField: e.target.value})\n  };\n  render(){\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monsters => \n      monsters.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n      )\n    return(\n      <div className=\"App\">\n          <h1>Monster</h1>\n          <SearchBox\n          placeholder ='search monster'\n          handleChange={this.handleChange}\n          />\n        <CardList monsters ={filteredMonsters}> </CardList>\n    </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}