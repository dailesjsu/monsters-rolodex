[{"/Users/daile/monsters-rolodex/src/reportWebVitals.js":"1","/Users/daile/monsters-rolodex/src/App.js":"2","/Users/daile/monsters-rolodex/src/components/card-list/card-list.component.jsx":"3","/Users/daile/monsters-rolodex/src/index.js":"4","/Users/daile/monsters-rolodex/src/components/card/card.components.jsx":"5","/Users/daile/monsters-rolodex/src/components/search-box.component/search-box.component.jsx":"6"},{"size":362,"mtime":1609636642962,"results":"7","hashOfConfig":"8"},{"size":1186,"mtime":1609797859071,"results":"9","hashOfConfig":"8"},{"size":289,"mtime":1609747396636,"results":"10","hashOfConfig":"8"},{"size":500,"mtime":1609746267862,"results":"11","hashOfConfig":"8"},{"size":295,"mtime":1609747664846,"results":"12","hashOfConfig":"8"},{"size":271,"mtime":1609789475677,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"18wdrhj",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/daile/monsters-rolodex/src/reportWebVitals.js",[],["31","32"],"/Users/daile/monsters-rolodex/src/App.js",["33","34"],"import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { CardList } from './components/card-list/card-list.component';\nimport './App.css';\nimport { render } from '@testing-library/react';\nimport {SearchBox} from './components/search-box.component/search-box.component';\n\nclass App extends Component \n{\n  constructor()\n  {\n    super();\n    \n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ monsters: users}));\n  }\n  handleChange =(e) => {\n    this.setState({searchField: e.target.value})\n  };\n  render(){\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monsters => \n      monsters.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n      )\n    return(\n      <div className=\"App\">\n          <h1>Monster</h1>\n          <SearchBox\n          placeholder ='search monster'\n          handleChange={this.handleChange}\n          />\n        <CardList monsters ={filteredMonsters}> </CardList>\n    </div>\n    );\n  }\n}\nexport default App;\n",["35","36"],"/Users/daile/monsters-rolodex/src/components/card-list/card-list.component.jsx",[],["37","38"],"/Users/daile/monsters-rolodex/src/index.js",[],["39","40"],"/Users/daile/monsters-rolodex/src/components/card/card.components.jsx",[],"/Users/daile/monsters-rolodex/src/components/search-box.component/search-box.component.jsx",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":12},{"ruleId":"45","severity":1,"message":"49","line":5,"column":10,"nodeType":"47","messageId":"48","endLine":5,"endColumn":16},{"ruleId":"41","replacedBy":"50"},{"ruleId":"43","replacedBy":"51"},{"ruleId":"41","replacedBy":"52"},{"ruleId":"43","replacedBy":"53"},{"ruleId":"41","replacedBy":"54"},{"ruleId":"43","replacedBy":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'render' is defined but never used.",["56"],["57"],["56"],["57"],["56"],["57"],"no-global-assign","no-unsafe-negation"]